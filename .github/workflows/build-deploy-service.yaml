name: CI For .NET Microservices

on:
  push:
    branches:
      - main
    paths:
      - 'services/**'
      - '.github/workflows/**'
      - 'shared/**'
      - 'Dockerfile'
  pull_request:
    branches:
      - main
    paths:
      - 'services/**'
      - '.github/workflows/**'
      - 'shared/**'
      - 'Dockerfile'

jobs:
  create-tag:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout code
      uses: actions/checkout@v3
      with:
        # Optionally specify the ref, but it's not necessary as this step will pick up the tag from the push event.
        fetch-depth: 0  # Ensures all tags are fetched

    - name: Determine next SemVer tag
      id: tag
      run: |
        # Get the latest tag from the repository
        LATEST_TAG=$(git describe --tags --abbrev=0 || echo "0.0.0")

        # Increment the patch version
        IFS='.' read -r MAJOR MINOR PATCH <<< "$LATEST_TAG"
        PATCH=$((PATCH + 1))
        NEXT_TAG="$MAJOR.$MINOR.$PATCH"

        # Set the next tag as an output variable
        echo "next_tag=$NEXT_TAG" >> $GITHUB_ENV
        echo "Next tag version: $NEXT_TAG"

    # Create and push the Git tag
    - name: Create and push the new Git tag
      env:
        TAG: ${{ env.next_tag }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git tag $TAG
        git push origin $TAG

  build:
    runs-on: ubuntu-latest
    needs: create-tag
    strategy:
      matrix:
        service:
          - dotnet-resources-test
          - dotnet-hello-world-api

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        # Optionally specify the ref, but it's not necessary as this step will pick up the tag from the push event.
        fetch-depth: 0  # Ensures all tags are fetched

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: |
        cd services/${{ matrix.service }}
        dotnet restore

    - name: Build the application
      run: |
        cd services/${{ matrix.service }}
        dotnet build --configuration Release --no-restore

    - name: Determine next SemVer tag
      id: tag
      run: |
        # Get the latest tag from the repository
        LATEST_TAG=$(git describe --tags --abbrev=0 || echo "0.0.0")
        NEXT_TAG="$LATEST_TAG"

        # Set the next tag as an output variable
        echo "next_tag=$NEXT_TAG" >> $GITHUB_ENV
        echo "Next tag version: $NEXT_TAG"

    - name: Build Docker image
      run: |
        projName=$(echo ${{ matrix.service }} | sed -E 's/(^|-)([a-z])/\U\2/g; s/^-//')
        echo ${{ matrix.service }}
        echo $projName
        docker build --build-arg SERVICE_NAME=${{ matrix.service }} --build-arg PROJ_NAME=$projName -t sztestacr.azurecr.io/${{ matrix.service }}:${{ env.next_tag }} .


    - name: Login to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: sztestacr.azurecr.io
        username: ${{ secrets.AZURE_CLIENT_ID }}
        password: ${{ secrets.AZURE_CLIENT_SECRET }}
      if: success()

    - name: Push Docker image
      run: |
        docker push sztestacr.azurecr.io/${{ matrix.service }}:${{ env.next_tag }}
        docker tag sztestacr.azurecr.io/${{ matrix.service }}:${{ env.next_tag }} sztestacr.azurecr.io/${{ matrix.service }}:latest
        docker push sztestacr.azurecr.io/${{ matrix.service }}:latest
      if: success()

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
      continue-on-error: true

    - name: Push Docker image
      run: |
        docker push ghcr.io/${{ github.repository_owner }}/${{ matrix.service }}:${{ env.next_tag }}
        docker tag ghcr.io/${{ github.repository_owner }}/${{ matrix.service }}:${{ env.next_tag }} ghcr.io/${{ github.repository_owner }}/${{ matrix.service }}:latest
        docker push ghcr.io/${{ github.repository_owner }}/${{ matrix.service }}:latest
      continue-on-error: true